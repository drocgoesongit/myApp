// Generated by view binder compiler. Do not edit!
package com.example.miniworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.miniworld.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogInBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button Login;

  @NonNull
  public final EditText emailTxtLog;

  @NonNull
  public final EditText passwordTxtLog;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  @NonNull
  public final TextView txtNoAccount;

  private ActivityLogInBinding(@NonNull LinearLayout rootView, @NonNull Button Login,
      @NonNull EditText emailTxtLog, @NonNull EditText passwordTxtLog, @NonNull TextView textView2,
      @NonNull TextView textView3, @NonNull TextView textView5, @NonNull TextView textView6,
      @NonNull TextView textView7, @NonNull TextView txtNoAccount) {
    this.rootView = rootView;
    this.Login = Login;
    this.emailTxtLog = emailTxtLog;
    this.passwordTxtLog = passwordTxtLog;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.textView7 = textView7;
    this.txtNoAccount = txtNoAccount;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogInBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Login;
      Button Login = rootView.findViewById(id);
      if (Login == null) {
        break missingId;
      }

      id = R.id.emailTxtLog;
      EditText emailTxtLog = rootView.findViewById(id);
      if (emailTxtLog == null) {
        break missingId;
      }

      id = R.id.passwordTxtLog;
      EditText passwordTxtLog = rootView.findViewById(id);
      if (passwordTxtLog == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = rootView.findViewById(id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = rootView.findViewById(id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = rootView.findViewById(id);
      if (textView7 == null) {
        break missingId;
      }

      id = R.id.txtNoAccount;
      TextView txtNoAccount = rootView.findViewById(id);
      if (txtNoAccount == null) {
        break missingId;
      }

      return new ActivityLogInBinding((LinearLayout) rootView, Login, emailTxtLog, passwordTxtLog,
          textView2, textView3, textView5, textView6, textView7, txtNoAccount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
