// Generated by view binder compiler. Do not edit!
package com.example.miniworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatAutoCompleteTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.example.miniworld.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView logoMainPage;

  @NonNull
  public final ImageView menuBar;

  @NonNull
  public final ImageView search;

  @NonNull
  public final AppCompatAutoCompleteTextView searchBar;

  @NonNull
  public final FrameLayout searchFrame;

  @NonNull
  public final TextView textVew9;

  @NonNull
  public final FrameLayout ucropFrame;

  @NonNull
  public final RecyclerView userRecyclerView;

  private FragmentSearchBinding(@NonNull RelativeLayout rootView, @NonNull ImageView logoMainPage,
      @NonNull ImageView menuBar, @NonNull ImageView search,
      @NonNull AppCompatAutoCompleteTextView searchBar, @NonNull FrameLayout searchFrame,
      @NonNull TextView textVew9, @NonNull FrameLayout ucropFrame,
      @NonNull RecyclerView userRecyclerView) {
    this.rootView = rootView;
    this.logoMainPage = logoMainPage;
    this.menuBar = menuBar;
    this.search = search;
    this.searchBar = searchBar;
    this.searchFrame = searchFrame;
    this.textVew9 = textVew9;
    this.ucropFrame = ucropFrame;
    this.userRecyclerView = userRecyclerView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.logoMainPage;
      ImageView logoMainPage = rootView.findViewById(id);
      if (logoMainPage == null) {
        break missingId;
      }

      id = R.id.menuBar;
      ImageView menuBar = rootView.findViewById(id);
      if (menuBar == null) {
        break missingId;
      }

      id = R.id.search;
      ImageView search = rootView.findViewById(id);
      if (search == null) {
        break missingId;
      }

      id = R.id.search_bar;
      AppCompatAutoCompleteTextView searchBar = rootView.findViewById(id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_frame;
      FrameLayout searchFrame = rootView.findViewById(id);
      if (searchFrame == null) {
        break missingId;
      }

      id = R.id.textVew9;
      TextView textVew9 = rootView.findViewById(id);
      if (textVew9 == null) {
        break missingId;
      }

      id = R.id.ucrop_frame;
      FrameLayout ucropFrame = rootView.findViewById(id);
      if (ucropFrame == null) {
        break missingId;
      }

      id = R.id.user_recycler_view;
      RecyclerView userRecyclerView = rootView.findViewById(id);
      if (userRecyclerView == null) {
        break missingId;
      }

      return new FragmentSearchBinding((RelativeLayout) rootView, logoMainPage, menuBar, search,
          searchBar, searchFrame, textVew9, ucropFrame, userRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
