// Generated by view binder compiler. Do not edit!
package com.example.miniworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.miniworld.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddingPostBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button addPostImage;

  @NonNull
  public final EditText captionText;

  @NonNull
  public final ImageView editPost;

  @NonNull
  public final EditText locationText;

  @NonNull
  public final ImageView postImage;

  private ActivityAddingPostBinding(@NonNull LinearLayout rootView, @NonNull Button addPostImage,
      @NonNull EditText captionText, @NonNull ImageView editPost, @NonNull EditText locationText,
      @NonNull ImageView postImage) {
    this.rootView = rootView;
    this.addPostImage = addPostImage;
    this.captionText = captionText;
    this.editPost = editPost;
    this.locationText = locationText;
    this.postImage = postImage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddingPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddingPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_adding_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddingPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addPostImage;
      Button addPostImage = rootView.findViewById(id);
      if (addPostImage == null) {
        break missingId;
      }

      id = R.id.captionText;
      EditText captionText = rootView.findViewById(id);
      if (captionText == null) {
        break missingId;
      }

      id = R.id.editPost;
      ImageView editPost = rootView.findViewById(id);
      if (editPost == null) {
        break missingId;
      }

      id = R.id.locationText;
      EditText locationText = rootView.findViewById(id);
      if (locationText == null) {
        break missingId;
      }

      id = R.id.postImage;
      ImageView postImage = rootView.findViewById(id);
      if (postImage == null) {
        break missingId;
      }

      return new ActivityAddingPostBinding((LinearLayout) rootView, addPostImage, captionText,
          editPost, locationText, postImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
