// Generated by view binder compiler. Do not edit!
package com.example.miniworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.miniworld.R;
import com.google.android.material.card.MaterialCardView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView captionPost;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final MaterialCardView materialCardView;

  @NonNull
  public final CircleImageView postProfilePhoto;

  @NonNull
  public final TextView postUsername;

  @NonNull
  public final ImageView postuserHomeScreen;

  private PostLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView captionPost,
      @NonNull LinearLayout ll, @NonNull MaterialCardView materialCardView,
      @NonNull CircleImageView postProfilePhoto, @NonNull TextView postUsername,
      @NonNull ImageView postuserHomeScreen) {
    this.rootView = rootView;
    this.captionPost = captionPost;
    this.ll = ll;
    this.materialCardView = materialCardView;
    this.postProfilePhoto = postProfilePhoto;
    this.postUsername = postUsername;
    this.postuserHomeScreen = postuserHomeScreen;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.captionPost;
      TextView captionPost = rootView.findViewById(id);
      if (captionPost == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = rootView.findViewById(id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.materialCardView;
      MaterialCardView materialCardView = rootView.findViewById(id);
      if (materialCardView == null) {
        break missingId;
      }

      id = R.id.postProfilePhoto;
      CircleImageView postProfilePhoto = rootView.findViewById(id);
      if (postProfilePhoto == null) {
        break missingId;
      }

      id = R.id.postUsername;
      TextView postUsername = rootView.findViewById(id);
      if (postUsername == null) {
        break missingId;
      }

      id = R.id.postuserHomeScreen;
      ImageView postuserHomeScreen = rootView.findViewById(id);
      if (postuserHomeScreen == null) {
        break missingId;
      }

      return new PostLayoutBinding((ConstraintLayout) rootView, captionPost, ll, materialCardView,
          postProfilePhoto, postUsername, postuserHomeScreen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
