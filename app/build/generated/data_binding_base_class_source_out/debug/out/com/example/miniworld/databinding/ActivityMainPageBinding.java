// Generated by view binder compiler. Do not edit!
package com.example.miniworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.miniworld.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainPageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView greetingUsername;

  @NonNull
  public final TextView greetingsText;

  @NonNull
  public final ImageView logoMainPage;

  @NonNull
  public final ImageView menuBar;

  @NonNull
  public final TextView textView9;

  private ActivityMainPageBinding(@NonNull LinearLayout rootView,
      @NonNull TextView greetingUsername, @NonNull TextView greetingsText,
      @NonNull ImageView logoMainPage, @NonNull ImageView menuBar, @NonNull TextView textView9) {
    this.rootView = rootView;
    this.greetingUsername = greetingUsername;
    this.greetingsText = greetingsText;
    this.logoMainPage = logoMainPage;
    this.menuBar = menuBar;
    this.textView9 = textView9;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.greetingUsername;
      TextView greetingUsername = rootView.findViewById(id);
      if (greetingUsername == null) {
        break missingId;
      }

      id = R.id.greetingsText;
      TextView greetingsText = rootView.findViewById(id);
      if (greetingsText == null) {
        break missingId;
      }

      id = R.id.logoMainPage;
      ImageView logoMainPage = rootView.findViewById(id);
      if (logoMainPage == null) {
        break missingId;
      }

      id = R.id.menuBar;
      ImageView menuBar = rootView.findViewById(id);
      if (menuBar == null) {
        break missingId;
      }

      id = R.id.textView9;
      TextView textView9 = rootView.findViewById(id);
      if (textView9 == null) {
        break missingId;
      }

      return new ActivityMainPageBinding((LinearLayout) rootView, greetingUsername, greetingsText,
          logoMainPage, menuBar, textView9);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
