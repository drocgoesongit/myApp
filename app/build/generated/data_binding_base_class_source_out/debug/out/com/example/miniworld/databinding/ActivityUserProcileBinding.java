// Generated by view binder compiler. Do not edit!
package com.example.miniworld.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.miniworld.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserProcileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView bioText;

  @NonNull
  public final Button followButton;

  @NonNull
  public final TextView followers;

  @NonNull
  public final TextView followersNumber;

  @NonNull
  public final TextView following;

  @NonNull
  public final TextView followingNumber;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final ImageView logoMainPage;

  @NonNull
  public final Button messageButton;

  @NonNull
  public final TextView post;

  @NonNull
  public final TextView postsNumber;

  @NonNull
  public final ImageView profileUserPhoto;

  @NonNull
  public final TextView profileUsername;

  private ActivityUserProcileBinding(@NonNull LinearLayout rootView, @NonNull TextView bioText,
      @NonNull Button followButton, @NonNull TextView followers, @NonNull TextView followersNumber,
      @NonNull TextView following, @NonNull TextView followingNumber,
      @NonNull LinearLayout linearLayout, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout linearLayout3, @NonNull ImageView logoMainPage,
      @NonNull Button messageButton, @NonNull TextView post, @NonNull TextView postsNumber,
      @NonNull ImageView profileUserPhoto, @NonNull TextView profileUsername) {
    this.rootView = rootView;
    this.bioText = bioText;
    this.followButton = followButton;
    this.followers = followers;
    this.followersNumber = followersNumber;
    this.following = following;
    this.followingNumber = followingNumber;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.logoMainPage = logoMainPage;
    this.messageButton = messageButton;
    this.post = post;
    this.postsNumber = postsNumber;
    this.profileUserPhoto = profileUserPhoto;
    this.profileUsername = profileUsername;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserProcileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserProcileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user_procile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserProcileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bioText;
      TextView bioText = rootView.findViewById(id);
      if (bioText == null) {
        break missingId;
      }

      id = R.id.followButton;
      Button followButton = rootView.findViewById(id);
      if (followButton == null) {
        break missingId;
      }

      id = R.id.followers;
      TextView followers = rootView.findViewById(id);
      if (followers == null) {
        break missingId;
      }

      id = R.id.followersNumber;
      TextView followersNumber = rootView.findViewById(id);
      if (followersNumber == null) {
        break missingId;
      }

      id = R.id.following;
      TextView following = rootView.findViewById(id);
      if (following == null) {
        break missingId;
      }

      id = R.id.followingNumber;
      TextView followingNumber = rootView.findViewById(id);
      if (followingNumber == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = rootView.findViewById(id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = rootView.findViewById(id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.logoMainPage;
      ImageView logoMainPage = rootView.findViewById(id);
      if (logoMainPage == null) {
        break missingId;
      }

      id = R.id.messageButton;
      Button messageButton = rootView.findViewById(id);
      if (messageButton == null) {
        break missingId;
      }

      id = R.id.post;
      TextView post = rootView.findViewById(id);
      if (post == null) {
        break missingId;
      }

      id = R.id.postsNumber;
      TextView postsNumber = rootView.findViewById(id);
      if (postsNumber == null) {
        break missingId;
      }

      id = R.id.profileUserPhoto;
      ImageView profileUserPhoto = rootView.findViewById(id);
      if (profileUserPhoto == null) {
        break missingId;
      }

      id = R.id.profileUsername;
      TextView profileUsername = rootView.findViewById(id);
      if (profileUsername == null) {
        break missingId;
      }

      return new ActivityUserProcileBinding((LinearLayout) rootView, bioText, followButton,
          followers, followersNumber, following, followingNumber, linearLayout, linearLayout2,
          linearLayout3, logoMainPage, messageButton, post, postsNumber, profileUserPhoto,
          profileUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
